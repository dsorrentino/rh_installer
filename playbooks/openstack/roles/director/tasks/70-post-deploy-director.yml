- name: Clean up image files if they exist in ~{{ uc_user }}/images
  file:
    path: ~/images/{{ item }}
    state: absent
  with_items:
    - ironic-python-agent.initramfs
    - ironic-python-agent.kernel
    - overcloud-full.initrd
    - overcloud-full.qcow2
    - overcloud-full.vmlinuz
  become: yes
  become_user: "{{ uc_user }}"
- name: Extract images
  shell: |
         cd ~/images
         for i in $(ls /usr/share/rhosp-director-images/overcloud-full-latest-{{ osp_version }}*.tar /usr/share/rhosp-director-images/ironic-python-agent-latest-{{ osp_version }}*.tar)
         do
           tar -xvf $i
         done
  become: yes
  become_user: "{{ uc_user }}"
- name: Set root password on the Overcloud Images
  shell: |
         export LIBGUESTFS_BACKEND=direct
         virt-customize -a ~/images/overcloud-full.qcow2 --root-password password:{{ oc_pass }}
  become: yes
  become_user: "{{ uc_user }}"
  when: enable_oc_pass
- name: Upload images
  shell: source ~/stackrc; openstack overcloud image upload --image-path /home/stack/images/ --update-existing
  become: yes
  become_user: "{{ uc_user }}"
- name: Get subnet ID
  shell: source ~/stackrc; openstack subnet list -f value -c ID
  register: neutron_subnet
  become: yes
  become_user: "{{ uc_user }}"
- name: Check if the dns_nameserver is set
  shell: source ~/stackrc; openstack subnet show {{ neutron_subnet.stdout }} -c dns_nameservers -f value
  register: configured_dns
  become: yes
  become_user: "{{ uc_user }}"
- name: Get undercloud nameserver
  shell: egrep ^nameserver /etc/resolv.conf | head -1 | awk '{print $NF}'
  register: undercloud_nameserver
  when: configured_dns == "" and neutron_nameserver == "undercloud"
  become: yes
  become_user: "{{ uc_user }}"
- name: Set neutron nameserver to same as undercloud nameserver
  shell: source ~/stackrc; openstack subnet update {{ neutron_subnet.stdout }} --dns-nameserver {{ undercloud_nameserver.stdout }}
  when: configured_dns == "" and neutron_nameserver == "undercloud"
  become: yes
  become_user: "{{ uc_user }}"
- name: Set neutron nameserver to {{ neutron_nameserver }}
  shell: source ~/stackrc; neutron subnet-update {{ neutron_subnet.stdout }} --dns-nameserver {{ neutron_nameserver }}
  when: configured_dns == "" and neutron_nameserver != "undercloud"
  become: yes
  become_user: "{{ uc_user }}"
